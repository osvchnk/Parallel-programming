/* На нулевом процессе задан массив целых чисел, который является двоичным представлением
* десятичного числа. Написать параллельную программу вычисления десятичного числа из заданного
* двоичного представления.
* int a[30] = {1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1};
* Число x может быть представлено в системе с основанием p, как x=a0*pn+a1*pn-1+ an-1*p1+an*p0, где a0
* ... an - цифры в представлении данного числа.
*/
#include <stdio.h>
#include <omp.h>
#include <iostream>
#include <stdlib.h>
#include <cmath>

int main() {
    int a[30] = {1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1};
    int val;

    #pragma omp parallel num_threads(8)
    {
        #pragma omp for reduction(+ : val)
        for (int i = 0; i < 30; i++) {
            val += a[i] * pow(2, 29 - i);
        }
    }
    printf("value: %d", val);
}