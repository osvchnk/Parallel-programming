/* Написать программу, в которой определить две параллельные области, каждая из которых
* содержит итерационную конструкцию for выполняющую инициализацию элементов одномерных
* массивов целых чисел a[12], b[12] и c[12]. Число нитей перед первой областью задать равным 3,
* перед второй – равным 4. Первая параллельная область выполняет инициализацию элементов
* массивов a и b с использованием статического распределения итераций, размер порции итераций
* выбрать самостоятельно, вторая параллельная область выполняет инициализацию элементов массива
* c по следующему правилу c[i] = a[i] + b[i], с использованием динамического распределения
* итераций, размер порции итераций выбрать самостоятельно. В каждой области определить и выдать
* на экран количество нитей, номер нити, номер итерации, которые она выполняет, и результат
* выполнения цикла. Убедиться в правильности работы программы.
*/
#include <stdio.h>
#include <omp.h>
#include <iostream>
#include <stdlib.h>

int main()
{
    int a[12], b[12], c[12];
    #pragma omp parallel num_threads(3)
    {
        printf("Num_threads: %d\n", omp_get_num_threads());
        #pragma omp for schedule(static, 2)
        for (int i = 0; i < 10; i++) {
            printf("thread: %d  iteration: %d\n", omp_get_thread_num(), i);
            a[i] = i;
            b[i] = i * 2;
        }
    }
    #pragma omp parallel num_threads(4)
    {
        printf("Num_threads: %d\n", omp_get_num_threads());
        #pragma omp for schedule(dynamic, 2)
        for (int i = 0; i < 10; i++) {
            printf("thread: %d  iteration: %d\n", omp_get_thread_num(), i);
            c[i] = a[i] + b[i];
        }
    }
}